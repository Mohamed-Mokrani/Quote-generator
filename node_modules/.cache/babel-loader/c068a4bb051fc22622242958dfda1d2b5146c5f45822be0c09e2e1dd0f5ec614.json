{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\medmo\\\\OneDrive\\\\Bureau\\\\Clowns\\\\quote-generator\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const url = \"https://api.quotable.io/random\";\n  let quoteData = {\n    content: \"Let time be your only competitor.\",\n    author: \"Ahmed Saber\"\n  };\n  const [quote, setQuote] = useState(quoteData);\n  const generateQuote = () => {\n    fetch(url).then(response => response.json()).then(data => {\n      console.log(data);\n      setQuote(data);\n    });\n  };\n  const copy = () => {\n    navigator.clipboard.writeText(quote.author + \" once said: \" + quote.content);\n    alert('copied');\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Quote Generator React App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: quote.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: quote.author\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btns\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: copy,\n          className: \"btn\",\n          children: \"Copy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: generateQuote,\n          children: \"Generate Another Quote\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(App, \"sv55tLmWrN78CQEVUV0ITM0H5+s=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","url","quoteData","content","author","quote","setQuote","generateQuote","fetch","then","response","json","data","console","log","copy","navigator","clipboard","writeText","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","_c","$RefreshReg$"],"sources":["C:/Users/medmo/OneDrive/Bureau/Clowns/quote-generator/src/App.js"],"sourcesContent":["import './App.css';\r\nimport React, {useState} from 'react';\r\n\r\nconst App = () => {\r\n  const url = \"https://api.quotable.io/random\";\r\n  let quoteData = {\r\n    content: \"Let time be your only competitor.\",\r\n    author: \"Ahmed Saber\"\r\n  }\r\n  const [quote, setQuote] = useState(quoteData)\r\n\r\n  const generateQuote = () => {\r\n    fetch(url)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log(data)\r\n        setQuote(data)\r\n      });\r\n  }\r\n\r\n  const copy = () => {\r\n    navigator.clipboard.writeText(quote.author + \" once said: \" + quote.content)\r\n    alert('copied')\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h1>Quote Generator React App</h1>\r\n      <div className=\"container\">\r\n        <p>{quote.content}</p>\r\n        <span>{quote.author}</span>\r\n        <div className=\"btns\">\r\n          <button onClick={copy} className=\"btn\">Copy</button>\r\n          <button onClick={generateQuote}>Generate Another Quote</button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEtC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAMC,GAAG,GAAG,gCAAgC;EAC5C,IAAIC,SAAS,GAAG;IACdC,OAAO,EAAE,mCAAmC;IAC5CC,MAAM,EAAE;EACV,CAAC;EACD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAACQ,SAAS,CAAC;EAE7C,MAAMK,aAAa,GAAGA,CAAA,KAAM;IAC1BC,KAAK,CAACP,GAAG,CAAC,CACPQ,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjBN,QAAQ,CAACM,IAAI,CAAC;IAChB,CAAC,CAAC;EACN,CAAC;EAED,MAAMG,IAAI,GAAGA,CAAA,KAAM;IACjBC,SAAS,CAACC,SAAS,CAACC,SAAS,CAACb,KAAK,CAACD,MAAM,GAAG,cAAc,GAAGC,KAAK,CAACF,OAAO,CAAC;IAC5EgB,KAAK,CAAC,QAAQ,CAAC;EACjB,CAAC;EAED,oBACEvB,OAAA,CAAAE,SAAA;IAAAsB,QAAA,gBACExB,OAAA;MAAAwB,QAAA,EAAI;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClC5B,OAAA;MAAK6B,SAAS,EAAC,WAAW;MAAAL,QAAA,gBACxBxB,OAAA;QAAAwB,QAAA,EAAIf,KAAK,CAACF;MAAO;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtB5B,OAAA;QAAAwB,QAAA,EAAOf,KAAK,CAACD;MAAM;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC3B5B,OAAA;QAAK6B,SAAS,EAAC,MAAM;QAAAL,QAAA,gBACnBxB,OAAA;UAAQ8B,OAAO,EAAEX,IAAK;UAACU,SAAS,EAAC,KAAK;UAAAL,QAAA,EAAC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACpD5B,OAAA;UAAQ8B,OAAO,EAAEnB,aAAc;UAAAa,QAAA,EAAC;QAAsB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA,eACN,CAAC;AAEP,CAAC;AAAAxB,EAAA,CAnCKD,GAAG;AAAA4B,EAAA,GAAH5B,GAAG;AAsCT,eAAeA,GAAG;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}